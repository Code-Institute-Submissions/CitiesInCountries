@import url('https://fonts.googleapis.com/css?family=Raleway|&display=swap');

/* --- "Reset!" and Set Basic Parameters  --- */
* {
    margin: 0;
    padding: 0;
    border: 0;
}

/* Always set the map height explicitly to define the size of the <div> element that contains the Google Map. */
#map {
    height: 100%;
}

/* Makes the Google Map page fill the window. */
html,
body {
    height: 100%;
    margin: 0;
    padding: 0;
    font-family: 'Raleway', sans-serif;
    background: linear-gradient(0.25turn, rgba(63, 135, 166, 0.9), rgba(235, 248, 225, 0.9), rgba(246, 157, 60, 0.9));
}


/* === WHY?
To control the style of the Google Map navigation elements we replace the default controls.

=== WHAT?
Google Maps API - Replacing Default Controls: https://developers.google.com/maps/documentation/javascript/examples/control-replacement

=== HOW?
HTML: Create the navigation elements with relevant classes and id's, to be referenced by CSS and modified via JS.
CSS: Style the Google Maps navigation elements, .gm-style... classes.
JS: Create and call custom functions, ZoomControl, MapType Control, and FullScreenControl.
*/

.gm-style .controls {
    font-size: 36px;
    background-color: rgb(255, 255, 255);
    background: linear-gradient(0.25turn, rgba(63, 135, 166, 0.9), rgba(235, 248, 225, 0.9), rgba(246, 157, 60, 0.9));
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    box-sizing: border-box;
    border-radius: 2px;
    cursor: pointer;
    font-weight: 300;
    height: 1em;
    margin: 6px;
    text-align: center;
    user-select: none;
    padding: 2px;
    width: 1em;
}

.gm-style .controls button {
    border: 0;
    background-color: rgb(255, 255, 255);
    color: rgb(0, 0, 0);
    font-family: 'Raleway', sans-serif;
}

.gm-style .controls button:active {
    color: rgb(0, 0, 0);
    background: linear-gradient(0.25turn, rgba(63, 135, 166, 0.9), rgba(235, 248, 225, 0.9), rgba(246, 157, 60, 0.9));
}

.gm-style .controls button:focus {
    outline: none;
}

.gm-style .controls.zoom-control {
    display: flex;
    flex-direction: column;
    height: auto;
}

.gm-style .controls.zoom-control button {
    font: 0.85em Raleway;
    margin: 1px;
    padding: 0;
}

.gm-style .controls.maptype-control {
    display: flex;
    flex-direction: row;
    width: auto;
}

.gm-style .controls.maptype-control button {
    display: inline-block;
    font-size: 0.5em;
    margin: 0 1px;
    padding: 0 6px;
}

.gm-style .controls.maptype-control.maptype-control-is-map .maptype-control-map {
    font-weight: 700;
}

.gm-style .controls.maptype-control.maptype-control-is-satellite .maptype-control-satellite {
    font-weight: 700;
}

.gm-style-iw,
.gm-style-iw-c {
    background: linear-gradient(0.25turn, rgba(63, 135, 166, 0.9), rgba(235, 248, 225, 0.9), rgba(246, 157, 60, 0.9));
}

/* Consistent Font use on the website - Google Map, Tool-Tips, Controls and Text */
.weather,
.btn,
.gm-style,
.controls,
p {
    font-family: 'Raleway', sans-serif;
    margin-bottom: 10px;
}


/* === WHY?
To create an appealing look-and-feel for the viewing of cities across the World on Google Maps,
and provide easy-access to city overview, weather, and details (D3) while staying on the same page.

=== WHAT?
Create a Grid with responsive elements to suit mobiles, tablets, and desktops.

=== HOW?
HTML: Create the <div> elements for the map, markers, modals, and footer elements.
CSS: Create  the layout for Google Maps, the Footer, and Modals.
JS: Control Marker Tool-Tips, and Modals.
*/

.parent {
    height: 100%;
    display: grid;
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(20, 1fr);
    grid-template-areas:
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "map map map"
        "footer  footer footer";
}

.map {
    grid-area: map;
    display: grid;
    height: auto;
    width: auto;
}

.footer {
    display: inline-block;
    grid-area: footer;
    padding: 10px 0;
    position: relative;
    bottom: 0;
    margin: 0;
    text-align: center;
    background: linear-gradient(0.25turn, rgba(63, 135, 166, 0.9), rgba(235, 248, 225, 0.9), rgba(246, 157, 60, 0.9));
    color: rgb(0, 0, 0);
    -webkit-box-shadow: 0px -6px 20px 0px rgba(0, 0, 0, 0.19);
    -moz-box-shadow: 0px -6px 20px 0px rgba(0, 0, 0, 0.19);
    box-shadow: 0px -6px 20px 0px rgba(0, 0, 0, 0.19);
}



/* === FOOTER === */
/* === WHY?
Section Styling: to create a consistent contact experience, and look-and-feel throughout the website. Create a clean look, that's easy to comprehend and use.

=== WHAT?
Style the Fixed Footer in the same style as the rest of the website.

=== HOW?
HTML: Create the CSS Modal content for the footer footer elements.
CSS: Style the links (<a href...>) for the whole website.
JS: n/a.
*/

a {
    color: rgb(0, 0, 0);
    font-size: 110%;
    padding: 0px 10px;
    text-decoration: none;
}

a i:hover {
    transform: scale(1.5);
}

.modal a {
    color: rgb(0, 0, 0);
    font-size: 100%;
}


/* === BACKDROP === */
#backdrop {
    position: fixed;
    width: 100%;
    height: 100vh;
    top: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.20);
    z-index: 2;
    pointer-events: none;
    display: none;
}

#backdrop.visible {
    display: block;
    pointer-events: all;
}


/* === JS MODAL === */
/* === WHY?
Displays details without leaving the page, providing a clear and clean navigation option.
=== */
.card {
    background: rgb(255, 255, 255);
    border-radius: 10px;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

.modal {
    position: fixed;
    z-index: 100;
    width: 80%;
    top: 5vh;
    left: 10%;
    display: none;
    font-family: Raleway, sans-serif;
    background: linear-gradient(0.25turn, rgba(63, 135, 166, 0.9), rgba(235, 248, 225, 0.9), rgba(246, 157, 60, 0.9));
    overflow-y: auto;
    max-height: 90vh;
}

.modal.visible {
    display: block;
    animation: fade-slide-in 0.3s ease-out forwards;
}

.modal .modal__title {
    margin: 0;
    padding: 1rem;
    border-bottom: 1px solid rgb(0, 50, 158);
    background: rgb(0, 50, 158);
    color: rgb(0, 0, 0);
    border-radius: 10px 10px 0 0;
}

.modal .modal__content {
    padding: 1rem;
    font-family: inherit;
    border-radius: 10px 10px 0 0;
}

.modal .modal__actions {
    padding: 1rem;
    display: flex;
    justify-content: flex-end;
}

#add-modal .modal__content {
    display: flex;
    flex-direction: column;
}

hr {
    width: 80%;
    height: 2px;
    margin-left: auto;
    margin-right: auto;
    background-color: #666;
    border: 0 none;
    margin-top: 5px;
    margin-bottom: 5px;
}

.flag,
svg {
    margin-top: 5px;
}


/* === CSS Modal ===  */
/* === WHY?
Displays details without leaving the page, providing a clear and clean navigation option.
=== */
@-webkit-keyframes example {
    from {
        top: -100px;
        opacity: 0;
    }

    to {
        top: 0px;
        opacity: 1;
    }
}

/* Add animation (Standard syntax) */
@keyframes example {
    from {
        top: -100px;
        opacity: 0;
    }

    to {
        top: 0px;
        opacity: 1;
    }
}

/* The modal's background */
.cssmodal {
    display: none;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
}

/* Display the modal when targeted */
.cssmodal:target {
    display: table;
    position: absolute;
}

/* The modal box */
.cssmodal-dialog {
    display: table-cell;
    vertical-align: middle;
}

/* The modal's content */
.cssmodal-dialog .cssmodal-content {
    margin: auto;
    background: linear-gradient(0.25turn, rgba(63, 135, 166, 0.9), rgba(235, 248, 225, 0.9), rgba(246, 157, 60, 0.9));
    color: rgb(0, 0, 0);
    border-radius: 10px 10px 10px 10px;
    position: relative;
    padding: 0;
    outline: 0;
    text-align: justify;
    width: 80%;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    z-index: 4;
    -webkit-animation-name: example;
    -webkit-animation-duration: 0.5s;
    animation-name: example;
    animation-duration: 0.5s;
}

.cssmodal-container {
    padding: 10px 16px;
    text-align: left;
}

.modal-link-text:active {
    color: rgb(255, 255, 255);
}


/* === BUTTONS ===
Using CSS Button Creator: https://cssbuttoncreator.com/ and some additional modification to get it "just right".
Added 'outline: none' to remove ugly click outline.
*/
.button {
    background: rgba(63, 135, 166, 1);
    -webkit-border-radius: 20px;
    -moz-border-radius: 20px;
    border-radius: 20px;
    color: #FFFFFF;
    font-family: Raleway, sans-serif;
    font-size: 12px;
    font-weight: 100;
    padding: 3px 10px;
    text-shadow: 1px 1px 20px #000000;
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
    text-align: center;
    margin-right: 10px;
}

.button:hover {
    background: rgba(246, 157, 60, 1);
    -webkit-border-radius: 20px;
    -moz-border-radius: 20px;
    border-radius: 20px;
    text-decoration: none;
}

.button:focus {
    outline: none;
}

/*  === FORM === */
input[type=text],
textarea {
    width: 100%;
    padding: 4px 20px;
    margin: 4px 0;
    display: inline-block;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
}

#sendmail-status {
    font-size: 16px;
    padding-right: 12px;
}



/* === Responsive Web Design - Mobile Devices First and Foremost === */
/* --- Make sure that the JS Modal doesn't "hog the limelight, too much..." on displays with plenty of "Real Estate".
Using a Modal CSS trick for the JS Modal to center the modal; .modal {} --- */
@media screen and (min-width: 600px) and (min-height: 600px) {
    .modal {
        position: fixed;
        width: fit-content;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .modal .modal__content {
        line-height: 1.6;
    }

    .cssmodal-dialog .cssmodal-content {
        width: 70%;
    }

    .footer {
        padding: 10px 0;
        bottom: 0;
        margin: 0;
    }

    a {
        padding: 0px 50px;
    }

    input[type=text],
    textarea {
        padding: 12px 20px;
        margin: 8px 0;
    }
}